# Apply Patch to Subrepos After Merge
# -----------------------------------
# This GitHub Actions workflow runs after a pull request is merged into the monorepo.
# It identifies which subtrees (defined in .github/repos-config.json) were affected,
# generates a patch from the merge commit, and applies that patch to the corresponding
# sub-repositories by cloning them and committing the patch directly.
#
# Key Steps:
# 1. Generate a GitHub App token for authentication.
# 2. Checkout the monorepo at the merge commit.
# 3. Use a Python script to detect which subtrees were modified.
# 4. For each changed subtree:
#    - Generate a patch from the merge commit for that subtree.
#    - Determine the appropriate author (based on PR metadata or fallback).
#    - Clone the target sub-repo and apply the patch.
#    - Amend the commit message to include links to the monorepo PR and commit.
#    - Push the commit directly to the sub-repo.
#
# This ensures downstream sub-repositories are updated to reflect changes
# made in the monorepo immediately after merge.

name: Merged PR to Patch Subrepos

on:
  pull_request:
    types:
      - closed
    branches:
      - 'develop'

concurrency:
  group: pr-merge-sync-patch-${{ github.event.pull_request.number }}
  cancel-in-progress: false

jobs:
  patch:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-24.04
    steps:
      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          sparse-checkout: .github
          sparse-checkout-cone-mode: true
          token: ${{ steps.generate-token.outputs.token }}

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: '3.12'

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pydantic requests

      - name: Set up Git user
        run: |
          git config user.name "assistant-librarian[bot]"
          git config user.email "assistant-librarian[bot]@users.noreply.github.com"

      - name: Detect changed subtrees from merged PR
        id: detect
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          python .github/scripts/pr_detect_changed_subtrees.py \
            --repo "${{ github.repository }}" \
            --pr "${{ github.event.pull_request.number }}" \
            --config ".github/repos-config.json" \
            --require-auto-push

      - name: Checkout full repo with changed subtrees
        if: steps.detect.outputs.subtrees
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          sparse-checkout: |
            .github
            ${{ steps.detect.outputs.subtrees }}
          token: ${{ steps.generate-token.outputs.token }}
          fetch-depth: 0

      - name: Generate and apply patches
        if: steps.detect.outputs.subtrees
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          python .github/scripts/pr_merge_sync_patches.py \
            --repo "${{ github.repository }}" \
            --pr "${{ github.event.pull_request.number }}" \
            --subtrees "${{ steps.detect.outputs.subtrees }}" \
            --config ".github/repos-config.json"
