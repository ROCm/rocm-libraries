name: Auto Label PR

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  label-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout workflows
        uses: actions/checkout@v4
        with:
          sparse-checkout: '.github/*'

      - name: Get changed files
        id: files
        run: |
          files=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files" \
            | jq -r '.[].filename' | tr '\n' ' ')
          echo "changed_files=${files}" >> "$GITHUB_OUTPUT"

      - name: Get current labels
        id: current_labels
        run: |
          current_labels=$(gh pr view ${{ github.event.pull_request.number }} --json labels -q '.labels[].name' | tr '\n' ' ')
          echo "current_labels=${current_labels}" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Read repo configurations
        id: repos_config
        run: |
          repos=$(jq -r '.repositories[].name' .github/repos-config.json | tr '\n' ' ')
          echo "repos=$repos" >> "$GITHUB_OUTPUT"

      - name: Apply and remove labels
        run: |
          changed_files="${{ steps.files.outputs.changed_files }}"
          current_labels="${{ steps.current_labels.outputs.current_labels }}"
          repos="${{ steps.repos_config.outputs.repos }}"

          labels_to_add=()
          labels_to_remove=()

          for repo in $repos; do
            label="project: ${repo}"

            if echo "$changed_files" | grep -qE "\b${repo}/"; then
              labels_to_add+=("$label")
            else
              if echo "$current_labels" | grep -q "$label"; then
                labels_to_remove+=("$label")
              fi
            fi
          done

          if [ ${#labels_to_add[@]} -gt 0 ]; then
            echo "Applying labels: ${labels_to_add[*]}"
            gh pr edit ${{ github.event.pull_request.number }} --add-label "${labels_to_add[@]}"
          fi

          if [ ${#labels_to_remove[@]} -gt 0 ]; then
            echo "Removing labels: ${labels_to_remove[*]}"
            gh pr edit ${{ github.event.pull_request.number }} --remove-label "${labels_to_remove[@]}"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
